<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- 선언적 aop 설정 시작 -->
	<!-- <bean class="com.kh.spring.common.aop.LogAspect" id="logAspect"/>
	<bean class="com.kh.spring.common.aop.StopWatchAspect" id="StopWatchAspect"/>
	<aop:config>
		<aop:aspect id="logAspect" ref="logAspect">
			<aop:pointcut expression="execution(* com.kh.spring.memo.model.service.MemoServiceImpl..*(..))" id="memoPointcut"/>
			<aop:around method="aroundAdvice" pointcut-ref="memoPointcut"/> 사용할 메소드명 -> AspectClass에 생성한 method명과 일치해야 한다.
		</aop:aspect>
		
		<aop:aspect id="stopWatchAspect" ref="StopWatchAspect">
			<aop:pointcut expression="execution(* com.kh.spring.memo.controller.MemoController.insertMemo(..))" id="stopWatchPointcut"/>
			<aop:around method="stopWatchAdvice" pointcut-ref="stopWatchPointcut"/>
		</aop:aspect>
	</aop:config> -->
	<!-- 선언적 aop 설정 끝 -->
	
	<!-- 프로그래밍적 aop 설정 시작 -->
	<aop:aspectj-autoproxy/>
	<!-- 프로그래밍적 aop 설정 끝 -->

</beans>
